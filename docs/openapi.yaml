openapi: 3.0.3
info:
  title: Spaced Repetition App API
  description: API for a minimal spaced repetition learning app with SM-2 algorithm
  version: 1.0.0

paths:
  /decks:
    get:
      summary: Get all decks
      responses:
        '200':
          description: List of decks with stats
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeckWithStats'
    post:
      summary: Create a new deck
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
      responses:
        '201':
          description: Deck created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deck'
        '400':
          description: Invalid input

  /decks/{deckId}:
    get:
      summary: Get deck details
      parameters:
        - name: deckId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Deck details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeckWithStats'
        '404':
          description: Deck not found
    put:
      summary: Update deck
      parameters:
        - name: deckId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '200':
          description: Deck updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deck'
        '404':
          description: Deck not found
    delete:
      summary: Delete deck and all its cards
      parameters:
        - name: deckId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Deck deleted successfully
        '404':
          description: Deck not found

  /decks/{deckId}/cards:
    get:
      summary: Get all cards in a deck
      parameters:
        - name: deckId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of cards
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Card'
        '404':
          description: Deck not found
    post:
      summary: Create a new card in deck
      parameters:
        - name: deckId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - front
                - back
              properties:
                front:
                  type: string
                back:
                  type: string
      responses:
        '201':
          description: Card created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
        '400':
          description: Invalid input
        '404':
          description: Deck not found

  /decks/{deckId}/cards/due:
    get:
      summary: Get cards due for review in deck
      parameters:
        - name: deckId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of cards due for review
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Card'
        '404':
          description: Deck not found

  /cards/{cardId}:
    get:
      summary: Get card details
      parameters:
        - name: cardId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Card details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
        '404':
          description: Card not found
    put:
      summary: Update card content
      parameters:
        - name: cardId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                front:
                  type: string
                back:
                  type: string
      responses:
        '200':
          description: Card updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
        '404':
          description: Card not found
    delete:
      summary: Delete card
      parameters:
        - name: cardId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Card deleted successfully
        '404':
          description: Card not found

  /cards/{cardId}/review:
    post:
      summary: Submit review response (SM-2 algorithm)
      parameters:
        - name: cardId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - quality
              properties:
                quality:
                  type: integer
                  minimum: 0
                  maximum: 5
                  description: Quality of recall (0=total blackout, 5=perfect)
      responses:
        '200':
          description: Review processed, returns updated card with new scheduling
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
        '400':
          description: Invalid quality value
        '404':
          description: Card not found

components:
  schemas:
    Deck:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        created_at:
          type: string
          format: date-time
      required:
        - id
        - name
        - created_at

    DeckWithStats:
      allOf:
        - $ref: '#/components/schemas/Deck'
        - type: object
          properties:
            total_cards:
              type: integer
            cards_due_today:
              type: integer
            new_cards:
              type: integer

    Card:
      type: object
      properties:
        id:
          type: string
        deck_id:
          type: string
        front:
          type: string
        back:
          type: string
        easiness_factor:
          type: number
          format: float
          default: 2.5
          description: SM-2 easiness factor (minimum 1.3)
        interval_days:
          type: integer
          default: 1
          description: Current interval in days
        repetition_count:
          type: integer
          default: 0
          description: Number of successful consecutive reviews
        last_reviewed:
          type: string
          format: date-time
          nullable: true
        due_date:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
      required:
        - id
        - deck_id
        - front
        - back
        - easiness_factor
        - interval_days
        - repetition_count
        - due_date
        - created_at

  responses:
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
    BadRequest:
      description: Invalid request
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string